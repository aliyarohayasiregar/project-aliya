-- DROP SCHEMA public;

CREATE SCHEMA public AUTHORIZATION pg_database_owner;

COMMENT ON SCHEMA public IS 'standard public schema';

-- DROP SEQUENCE public.admin_id_seq;

CREATE SEQUENCE public.admin_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.admin_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.admin_id_seq TO postgres;
GRANT ALL ON SEQUENCE public.admin_id_seq TO anon;
GRANT ALL ON SEQUENCE public.admin_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.admin_id_seq TO service_role;

-- DROP SEQUENCE public.barang_id_seq;

CREATE SEQUENCE public.barang_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.barang_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.barang_id_seq TO postgres;
GRANT ALL ON SEQUENCE public.barang_id_seq TO anon;
GRANT ALL ON SEQUENCE public.barang_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.barang_id_seq TO service_role;

-- DROP SEQUENCE public.kategori_id_seq;

CREATE SEQUENCE public.kategori_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.kategori_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.kategori_id_seq TO postgres;
GRANT ALL ON SEQUENCE public.kategori_id_seq TO anon;
GRANT ALL ON SEQUENCE public.kategori_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.kategori_id_seq TO service_role;

-- DROP SEQUENCE public.login_id_seq;

CREATE SEQUENCE public.login_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.login_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.login_id_seq TO postgres;
GRANT ALL ON SEQUENCE public.login_id_seq TO anon;
GRANT ALL ON SEQUENCE public.login_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.login_id_seq TO service_role;
-- public."admin" definition

-- Drop table

-- DROP TABLE public."admin";

CREATE TABLE public."admin" (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	username text NULL,
	"password" text NULL,
	CONSTRAINT admin_pkey PRIMARY KEY (id)
);

-- Permissions

ALTER TABLE public."admin" OWNER TO postgres;
GRANT ALL ON TABLE public."admin" TO postgres;
GRANT ALL ON TABLE public."admin" TO anon;
GRANT ALL ON TABLE public."admin" TO authenticated;
GRANT ALL ON TABLE public."admin" TO service_role;


-- public.daftar definition

-- Drop table

-- DROP TABLE public.daftar;

CREATE TABLE public.daftar (
	username text NOT NULL,
	alamat text NULL,
	no_telepon text NULL,
	nama text NULL,
	CONSTRAINT login_pkey PRIMARY KEY (username)
);

-- Permissions

ALTER TABLE public.daftar OWNER TO postgres;
GRANT ALL ON TABLE public.daftar TO postgres;
GRANT ALL ON TABLE public.daftar TO anon;
GRANT ALL ON TABLE public.daftar TO authenticated;
GRANT ALL ON TABLE public.daftar TO service_role;


-- public.kategori definition

-- Drop table

-- DROP TABLE public.kategori;

CREATE TABLE public.kategori (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	nama_kategori text NULL,
	CONSTRAINT kategori_pkey PRIMARY KEY (id)
);

-- Permissions

ALTER TABLE public.kategori OWNER TO postgres;
GRANT ALL ON TABLE public.kategori TO postgres;
GRANT ALL ON TABLE public.kategori TO anon;
GRANT ALL ON TABLE public.kategori TO authenticated;
GRANT ALL ON TABLE public.kategori TO service_role;


-- public.barang definition

-- Drop table

-- DROP TABLE public.barang;

CREATE TABLE public.barang (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	nama_barang text NULL,
	harga_barang int8 NULL,
	descripsite text NULL,
	stok text NULL,
	foto text NULL,
	id_kategori int8 NULL,
	CONSTRAINT barang_pkey PRIMARY KEY (id),
	CONSTRAINT barang_id_kategori_fkey FOREIGN KEY (id_kategori) REFERENCES public.kategori(id)
);

-- Permissions

ALTER TABLE public.barang OWNER TO postgres;
GRANT ALL ON TABLE public.barang TO postgres;
GRANT ALL ON TABLE public.barang TO anon;
GRANT ALL ON TABLE public.barang TO authenticated;
GRANT ALL ON TABLE public.barang TO service_role;


-- public.login definition

-- Drop table

-- DROP TABLE public.login;

CREATE TABLE public.login (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	username text NULL,
	"password" text NULL,
	CONSTRAINT login_pkey1 PRIMARY KEY (id),
	CONSTRAINT login_username_fkey FOREIGN KEY (username) REFERENCES public.daftar(username)
);

-- Permissions

ALTER TABLE public.login OWNER TO postgres;
GRANT ALL ON TABLE public.login TO postgres;
GRANT ALL ON TABLE public.login TO anon;
GRANT ALL ON TABLE public.login TO authenticated;
GRANT ALL ON TABLE public.login TO service_role;



CREATE OR REPLACE FUNCTION public.increment(x integer, id integer)
 RETURNS void
 LANGUAGE sql
AS $function$
  update login 
  set id = id + x
  where id = id
$function$
;

-- Permissions

ALTER FUNCTION public."increment"(int4, int4) OWNER TO postgres;
GRANT ALL ON FUNCTION public."increment"(int4, int4) TO public;
GRANT ALL ON FUNCTION public."increment"(int4, int4) TO postgres;
GRANT ALL ON FUNCTION public."increment"(int4, int4) TO anon;
GRANT ALL ON FUNCTION public."increment"(int4, int4) TO authenticated;
GRANT ALL ON FUNCTION public."increment"(int4, int4) TO service_role;


-- Permissions

GRANT ALL ON SCHEMA public TO pg_database_owner;
GRANT USAGE ON SCHEMA public TO public;
GRANT USAGE ON SCHEMA public TO postgres;
GRANT USAGE ON SCHEMA public TO anon;
GRANT USAGE ON SCHEMA public TO authenticated;
GRANT USAGE ON SCHEMA public TO service_role;
